name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Garante que todo o histórico do Git é recuperado

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Define a versão do Python a ser usada

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Atualiza o pip para a versão mais recente
        pip install flake8 pytest pytest-cov  # Instala flake8, pytest e pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  # Instala dependências do requirements.txt, se existir

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV  # Define PYTHONPATH para o diretório de trabalho atual

    - name: Lint with flake8
      run: |
        # Verifica erros de sintaxe e nomes indefinidos
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Trata erros como avisos e define complexidade e comprimento de linha máximos
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests and collect coverage
      run: |
        pytest --cov=src --cov-report=xml  # Executa os testes e gera o relatório de cobertura em XML no diretório raiz

    - name: List files
      run: |
        ls -la  # Lista arquivos para verificar a presença de coverage.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        verbose: true
        files: ./coverage.xml
        exclude: |
          ./src/config.py
          ./src/init_db.py
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}  # Token secreto para autenticação com o Codecov
